shell:echo Install rider auto example

shell:echo Create fabric
fabric:create

dev:wait-for-service "(&(objectClass=org.apache.felix.service.command.Function)(osgi.command.scope=fabric)(osgi.command.function=profile-edit))"

shell:echo Create rider-auto profiles
fabric:profile-create --parents camel rider-auto-frontend
fabric:profile-create --parents camel rider-auto-backend

shell:echo Add repositories, features, ... to the profiles
fabric:profile-edit --repositories mvn:org.fusesource.examples/rider-auto-common/${project.version}/xml/features rider-auto-frontend
fabric:profile-edit --features rider-auto-frontend rider-auto-frontend

fabric:profile-edit --pid rider.auto.ws.config/httpAddress=http://localhost:9191/cxf/order rider-auto-frontend
fabric:profile-edit --pid rider.auto.file.config/fileEndpoint=file:target/incomingOrders rider-auto-frontend

fabric:profile-edit --repositories mvn:org.fusesource.examples/rider-auto-common/${project.version}/xml/features rider-auto-backend
fabric:profile-edit --features rider-auto-backend rider-auto-backend

shell:echo Creating containers
fabric:container-create-child --profile mq root rider-auto-broker
shell:sleep 1000
fabric:container-create-child --profile rider-auto-frontend root rider-auto-frontend
shell:sleep 1000
fabric:container-create-child --profile rider-auto-backend root rider-auto-backend

shell:echo done.
